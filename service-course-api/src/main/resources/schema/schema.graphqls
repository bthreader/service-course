# Scalars

scalar Url
@specifiedBy(url:
"https://www.w3.org/Addressing/URL/url-spec.txt"
)

"""
YYYY-MM-DD
"""
scalar Date
@specifiedBy(url:
"https://tools.ietf.org/html/rfc3339"
)

# Utils

input DateRangeFilterInput {
    from: Date!
    to: Date!
}

# Queries and mutations

type Query {
    bikes(filter: BikesFilterInput): [Bike!]
    """
    Get the available days to book for a give bike for a given date range.

    If no date range is specified, the default will be today -> last day of the current month
    """
    availableDays(
        bikeId: ID!,
        dateRangeFilterInput: DateRangeFilterInput): [Date!]
}

type Mutation {
    createBike(input: CreateBikeInput!): Bike
    updateBike(input: UpdateBikeInput!): Bike
    deleteBike(id: ID!): ID

    createModel(input: CreateModelInput!): Model
    deleteModel(id: ID!): ID

    createBrand(input: CreateBikeBrandInput!): BikeBrand
    deleteBikeBrand(name: String!): String
}

# Models

type BikeBrand {
    name: String!
    models: [Model!]
}

input CreateBikeBrandInput {
    name: String!
}

type Model {
    id: ID!
    name: String!
    modelYear: Int!
    brand: BikeBrand!
}

input CreateModelInput {
    name: String!
    modelYear: Int!
    brandName: String!
}

# Bikes

type Bike {
    id: ID!
    model: Model!
    size: String!
    groupset: Groupset!
    heroImageUrl: Url
}

input BikesFilterInput {
    """
    If specified, return only bikes that are available in the provided date range
    """
    availableDateRangeFilter: DateRangeFilterInput
}

input CreateBikeInput {
    modelId: ID!
    groupsetName: String!
    size: String!
    heroImageUrl: Url
}

input UpdateBikeInput {
    bikeId: ID!
    groupsetName: String
    heroImageUrl: Url
}

# Equipment

enum GroupsetBrand {
    SRAM
    SHIMANO
    CAMPAGNOLO
}

type Groupset {
    name: String!
    brand: GroupsetBrand!
    isElectronic: Boolean!
}
